<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-J5I9905" failures="0" tests="4" name="Default test" time="17.295" errors="0" timestamp="2022-06-04T09:50:21 PDT">
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@BeforeClass beforeClass" time="17.136">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created
from disconnected: received Inspector.detached event
  (Session info: chrome=102.0.5005.63)
Build info: version: &amp;apos;4.2.0&amp;apos;, revision: &amp;apos;86eb611648&amp;apos;
System info: host: &amp;apos;DESKTOP-J5I9905&amp;apos;, ip: &amp;apos;192.168.0.103&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created
from disconnected: received Inspector.detached event
  (Session info: chrome=102.0.5005.63)
Build info: version: '4.2.0', revision: '86eb611648'
System info: host: 'DESKTOP-J5I9905', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:566)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:108)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:106)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:93)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at BaseClasses.BaseClass1.getwebdriver(BaseClass1.java:17)
at TestClasses.VerifyUseCanBuyProduct.beforeClass(VerifyUseCanBuyProduct.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.65436142101E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654361421018E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654361421034E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@AfterMethod afterMethod" time="-1.65436142104E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654361421044E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654361421053E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654361421055E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654361421066E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="@AfterClass afterClass" time="-1.654361421068E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="VerifyUserCanLogin" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanLogin -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="VerifyUserCanSearchProduct" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanSearchProduct -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="VerifyUserCanSelectFirstProductGoToProductDetailPage" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanSelectFirstProductGoToProductDetailPage -->
  <testcase classname="TestClasses.VerifyUseCanBuyProduct" name="VerifyUserCanAddproduct" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanAddproduct -->
</testsuite> <!-- Default test -->
